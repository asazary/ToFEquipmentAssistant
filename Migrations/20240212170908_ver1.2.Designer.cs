// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TofEA.Model;

#nullable disable

namespace ToFEA.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20240212170908_ver1.2")]
    partial class ver12
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.1");

            modelBuilder.Entity("ToFEA.Model.BaseStat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("SlotId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Value")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("SlotId");

                    b.ToTable("BaseStats");
                });

            modelBuilder.Entity("ToFEA.Model.Equipment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("EquipmentTypeId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("NumberOfStars")
                        .HasColumnType("INTEGER");

                    b.Property<float>("Value")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.HasIndex("EquipmentTypeId");

                    b.ToTable("Equipments");
                });

            modelBuilder.Entity("ToFEA.Model.PossibleStat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsPercent")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MaxUpgradeValue")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MinUpgradeValue")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("PossibleStats");
                });

            modelBuilder.Entity("ToFEA.Model.PossibleTitanStat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("SlotId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("SlotId");

                    b.ToTable("PossibleTitanStats");
                });

            modelBuilder.Entity("ToFEA.Model.TitanStat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CurrentTitanStatId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SlotId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TitanLevel")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CurrentTitanStatId");

                    b.HasIndex("SlotId");

                    b.ToTable("TitanStats");
                });

            modelBuilder.Entity("TofEA.Model.EquipmentType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Generation")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("EquipmentTypes");
                });

            modelBuilder.Entity("ToFEA.Model.BaseStat", b =>
                {
                    b.HasOne("ToFEA.Model.Equipment", "Slot")
                        .WithMany("BaseStat")
                        .HasForeignKey("SlotId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Slot");
                });

            modelBuilder.Entity("ToFEA.Model.Equipment", b =>
                {
                    b.HasOne("TofEA.Model.EquipmentType", "EquipmentType")
                        .WithMany()
                        .HasForeignKey("EquipmentTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EquipmentType");
                });

            modelBuilder.Entity("ToFEA.Model.PossibleTitanStat", b =>
                {
                    b.HasOne("TofEA.Model.EquipmentType", "Slot")
                        .WithMany("PossibleTitanStat")
                        .HasForeignKey("SlotId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Slot");
                });

            modelBuilder.Entity("ToFEA.Model.TitanStat", b =>
                {
                    b.HasOne("ToFEA.Model.PossibleTitanStat", "CurrentTitanStat")
                        .WithMany()
                        .HasForeignKey("CurrentTitanStatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ToFEA.Model.Equipment", "Slot")
                        .WithMany("TitanStat")
                        .HasForeignKey("SlotId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CurrentTitanStat");

                    b.Navigation("Slot");
                });

            modelBuilder.Entity("ToFEA.Model.Equipment", b =>
                {
                    b.Navigation("BaseStat");

                    b.Navigation("TitanStat");
                });

            modelBuilder.Entity("TofEA.Model.EquipmentType", b =>
                {
                    b.Navigation("PossibleTitanStat");
                });
#pragma warning restore 612, 618
        }
    }
}
