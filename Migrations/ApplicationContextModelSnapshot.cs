// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TofEA.Model;

#nullable disable

namespace ToFEA.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.1");

            modelBuilder.Entity("BaseStatEquipment", b =>
                {
                    b.Property<int>("BaseStatsId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("EquipmentsId")
                        .HasColumnType("INTEGER");

                    b.HasKey("BaseStatsId", "EquipmentsId");

                    b.HasIndex("EquipmentsId");

                    b.ToTable("BaseStatEquipment");
                });

            modelBuilder.Entity("EquipmentTypePossibleStat", b =>
                {
                    b.Property<int>("EquipmentTypeId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PossibleStatsId")
                        .HasColumnType("INTEGER");

                    b.HasKey("EquipmentTypeId", "PossibleStatsId");

                    b.HasIndex("PossibleStatsId");

                    b.ToTable("EquipmentTypePossibleStat");
                });

            modelBuilder.Entity("EquipmentTypePossibleTitanStat", b =>
                {
                    b.Property<int>("EquipmentTypesId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PossibleTitanStatsId")
                        .HasColumnType("INTEGER");

                    b.HasKey("EquipmentTypesId", "PossibleTitanStatsId");

                    b.HasIndex("PossibleTitanStatsId");

                    b.ToTable("EquipmentTypePossibleTitanStat");
                });

            modelBuilder.Entity("ToFEA.Model.AugmentationStat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CurrentStatId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("EquipmentId")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Value")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.HasIndex("CurrentStatId");

                    b.HasIndex("EquipmentId");

                    b.ToTable("AugmentationStats");
                });

            modelBuilder.Entity("ToFEA.Model.BaseStat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("SlotId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("StatId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Value1")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Value2")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Value3")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("SlotId");

                    b.HasIndex("StatId");

                    b.ToTable("BaseStats");
                });

            modelBuilder.Entity("ToFEA.Model.Equipment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AugmentationLevel")
                        .HasColumnType("INTEGER");

                    b.Property<int>("EquipmentTypeId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("NumberOfStars")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("EquipmentTypeId");

                    b.ToTable("Equipments");
                });

            modelBuilder.Entity("ToFEA.Model.PossibleStat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("InitValue")
                        .HasColumnType("REAL");

                    b.Property<bool>("IsPercent")
                        .HasColumnType("INTEGER");

                    b.Property<double>("MaxUpgradeValue")
                        .HasColumnType("REAL");

                    b.Property<double>("MinUpgradeValue")
                        .HasColumnType("REAL");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("PossibleStats");
                });

            modelBuilder.Entity("ToFEA.Model.PossibleTitanStat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("PossibleTitanStats");
                });

            modelBuilder.Entity("ToFEA.Model.Stat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CurrentStatId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("EquipmentId")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Value")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.HasIndex("CurrentStatId");

                    b.HasIndex("EquipmentId");

                    b.ToTable("Stats");
                });

            modelBuilder.Entity("ToFEA.Model.StatLink", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CommonStatId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("DamageStatId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ElemStatId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("PercentStatId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CommonStatId");

                    b.HasIndex("DamageStatId");

                    b.HasIndex("ElemStatId");

                    b.HasIndex("PercentStatId");

                    b.ToTable("StatLinks");
                });

            modelBuilder.Entity("ToFEA.Model.TitanStat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CurrentTitanStatId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("EquipmentId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("StatLevel")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CurrentTitanStatId");

                    b.HasIndex("EquipmentId");

                    b.ToTable("TitanStats");
                });

            modelBuilder.Entity("TofEA.Model.EquipmentType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Generation")
                        .HasColumnType("INTEGER");

                    b.Property<string>("IconName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ShortName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("EquipmentTypes");
                });

            modelBuilder.Entity("BaseStatEquipment", b =>
                {
                    b.HasOne("ToFEA.Model.BaseStat", null)
                        .WithMany()
                        .HasForeignKey("BaseStatsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ToFEA.Model.Equipment", null)
                        .WithMany()
                        .HasForeignKey("EquipmentsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EquipmentTypePossibleStat", b =>
                {
                    b.HasOne("TofEA.Model.EquipmentType", null)
                        .WithMany()
                        .HasForeignKey("EquipmentTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ToFEA.Model.PossibleStat", null)
                        .WithMany()
                        .HasForeignKey("PossibleStatsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EquipmentTypePossibleTitanStat", b =>
                {
                    b.HasOne("TofEA.Model.EquipmentType", null)
                        .WithMany()
                        .HasForeignKey("EquipmentTypesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ToFEA.Model.PossibleTitanStat", null)
                        .WithMany()
                        .HasForeignKey("PossibleTitanStatsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ToFEA.Model.AugmentationStat", b =>
                {
                    b.HasOne("ToFEA.Model.PossibleStat", "CurrentStat")
                        .WithMany()
                        .HasForeignKey("CurrentStatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ToFEA.Model.Equipment", "Equipment")
                        .WithMany("AugmentationStats")
                        .HasForeignKey("EquipmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CurrentStat");

                    b.Navigation("Equipment");
                });

            modelBuilder.Entity("ToFEA.Model.BaseStat", b =>
                {
                    b.HasOne("TofEA.Model.EquipmentType", "Slot")
                        .WithMany("BaseStats")
                        .HasForeignKey("SlotId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ToFEA.Model.PossibleStat", "Stat")
                        .WithMany()
                        .HasForeignKey("StatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Slot");

                    b.Navigation("Stat");
                });

            modelBuilder.Entity("ToFEA.Model.Equipment", b =>
                {
                    b.HasOne("TofEA.Model.EquipmentType", "EquipmentType")
                        .WithMany()
                        .HasForeignKey("EquipmentTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EquipmentType");
                });

            modelBuilder.Entity("ToFEA.Model.Stat", b =>
                {
                    b.HasOne("ToFEA.Model.PossibleStat", "CurrentStat")
                        .WithMany()
                        .HasForeignKey("CurrentStatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ToFEA.Model.Equipment", "Equipment")
                        .WithMany("Stats")
                        .HasForeignKey("EquipmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CurrentStat");

                    b.Navigation("Equipment");
                });

            modelBuilder.Entity("ToFEA.Model.StatLink", b =>
                {
                    b.HasOne("ToFEA.Model.PossibleStat", "CommonStat")
                        .WithMany()
                        .HasForeignKey("CommonStatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ToFEA.Model.PossibleStat", "DamageStat")
                        .WithMany()
                        .HasForeignKey("DamageStatId");

                    b.HasOne("ToFEA.Model.PossibleStat", "ElemStat")
                        .WithMany()
                        .HasForeignKey("ElemStatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ToFEA.Model.PossibleStat", "PercentStat")
                        .WithMany()
                        .HasForeignKey("PercentStatId");

                    b.Navigation("CommonStat");

                    b.Navigation("DamageStat");

                    b.Navigation("ElemStat");

                    b.Navigation("PercentStat");
                });

            modelBuilder.Entity("ToFEA.Model.TitanStat", b =>
                {
                    b.HasOne("ToFEA.Model.PossibleTitanStat", "CurrentTitanStat")
                        .WithMany()
                        .HasForeignKey("CurrentTitanStatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ToFEA.Model.Equipment", "Equipment")
                        .WithMany("TitanStats")
                        .HasForeignKey("EquipmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CurrentTitanStat");

                    b.Navigation("Equipment");
                });

            modelBuilder.Entity("ToFEA.Model.Equipment", b =>
                {
                    b.Navigation("AugmentationStats");

                    b.Navigation("Stats");

                    b.Navigation("TitanStats");
                });

            modelBuilder.Entity("TofEA.Model.EquipmentType", b =>
                {
                    b.Navigation("BaseStats");
                });
#pragma warning restore 612, 618
        }
    }
}
